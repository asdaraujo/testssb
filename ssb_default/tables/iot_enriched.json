{
  "metadata" : {
    "schema.7.data-type" : "BIGINT",
    "schema.13.data-type" : "BIGINT",
    "scan.transform.js.b64.encoded" : "false",
    "schema.0.data-type" : "BIGINT",
    "scan.transform.js.code" : "// parse the JSON record\nvar parsedVal = JSON.parse(record.value);\n// Convert sensor_ts from micro to milliseconds\nparsedVal['sensor_ts'] = Math.round(parsedVal['sensor_ts']/1000);\n// serialize output as JSON\nJSON.stringify(parsedVal);",
    "schema.15.data-type" : "BIGINT",
    "schema.11.data-type" : "BIGINT",
    "schema.9.name" : "sensor_5",
    "schema.11.name" : "sensor_7",
    "schema.1.name" : "sensor_ts",
    "scan.startup.mode" : "group-offsets",
    "schema.14.name" : "sensor_10",
    "schema.4.name" : "sensor_0",
    "schema.3.data-type" : "ROW<`result` BIGINT>",
    "schema.12.name" : "sensor_8",
    "schema.15.name" : "sensor_11",
    "schema.3.name" : "response",
    "schema.7.name" : "sensor_3",
    "properties.request.timeout.ms" : "120000",
    "schema.watermark.0.strategy.data-type" : "TIMESTAMP(3)",
    "schema.6.name" : "sensor_2",
    "schema.5.data-type" : "BIGINT",
    "schema.16.expr" : "TO_TIMESTAMP_LTZ(`sensor_ts`, 3)",
    "schema.14.data-type" : "BIGINT",
    "schema.0.name" : "sensor_id",
    "schema.5.name" : "sensor_1",
    "schema.watermark.0.strategy.expr" : "`event_time` - INTERVAL '3' SECOND",
    "properties.auto.offset.reset" : "earliest",
    "schema.12.data-type" : "BIGINT",
    "schema.8.data-type" : "BIGINT",
    "schema.2.name" : "is_healthy",
    "format" : "json",
    "schema.16.name" : "event_time",
    "schema.16.data-type" : "TIMESTAMP(3) WITH LOCAL TIME ZONE",
    "schema.6.data-type" : "BIGINT",
    "schema.1.data-type" : "BIGINT",
    "connector" : "kafka: edge2ai-kafka",
    "schema.2.data-type" : "BIGINT",
    "schema.10.data-type" : "BIGINT",
    "schema.watermark.0.rowtime" : "event_time",
    "properties.transaction.timeout.ms" : "900000",
    "topic" : "iot_enriched",
    "properties.group.id" : "ssb-iot-1",
    "schema.9.data-type" : "BIGINT",
    "schema.13.name" : "sensor_9",
    "schema.4.data-type" : "BIGINT",
    "schema.10.name" : "sensor_6",
    "schema.8.name" : "sensor_4",
    "ssb.schema.text" : "{\n  \"type\": \"record\",\n  \"name\": \"inferredSchema\",\n  \"fields\": [\n    {\n      \"name\": \"sensor_id\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '14'\"\n    },\n    {\n      \"name\": \"sensor_ts\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '1698334140590244'\"\n    },\n    {\n      \"name\": \"is_healthy\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '1'\"\n    },\n    {\n      \"name\": \"response\",\n      \"type\": {\n        \"type\": \"record\",\n        \"name\": \"response\",\n        \"fields\": [\n          {\n            \"name\": \"result\",\n            \"type\": \"long\",\n            \"doc\": \"Type inferred from '1'\"\n          }\n        ]\n      },\n      \"doc\": \"Type inferred from '{\\\"result\\\":1}'\"\n    },\n    {\n      \"name\": \"sensor_0\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '3'\"\n    },\n    {\n      \"name\": \"sensor_1\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '7'\"\n    },\n    {\n      \"name\": \"sensor_2\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '5'\"\n    },\n    {\n      \"name\": \"sensor_3\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '55'\"\n    },\n    {\n      \"name\": \"sensor_4\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '3'\"\n    },\n    {\n      \"name\": \"sensor_5\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '80'\"\n    },\n    {\n      \"name\": \"sensor_6\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '20'\"\n    },\n    {\n      \"name\": \"sensor_7\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '80'\"\n    },\n    {\n      \"name\": \"sensor_8\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '44'\"\n    },\n    {\n      \"name\": \"sensor_9\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '7'\"\n    },\n    {\n      \"name\": \"sensor_10\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '1'\"\n    },\n    {\n      \"name\": \"sensor_11\",\n      \"type\": \"long\",\n      \"doc\": \"Type inferred from '4'\"\n    }\n  ]\n}",
    "ssb.watermark_spec" : {
      "timestamp_column" : "sensor_ts",
      "rowtime_column" : "event_time",
      "watermark_seconds" : null
    },
    "ssb.properties" : {
      "group.id" : "ssb-iot-1",
      "auto.offset.reset" : "earliest"
    }
  },
  "type" : "ssb",
  "table_name" : "iot_enriched",
  "transform_code_b64_encoded" : false,
  "transform_code" : "// parse the JSON record\nvar parsedVal = JSON.parse(record.value);\n// Convert sensor_ts from micro to milliseconds\nparsedVal['sensor_ts'] = Math.round(parsedVal['sensor_ts']/1000);\n// serialize output as JSON\nJSON.stringify(parsedVal);"
}